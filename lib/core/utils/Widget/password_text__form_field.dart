import 'package:flutter_bloc/flutter_bloc.dart';import 'package:textdetection/core/constant/string.dart';import '../../constant/icons.dart';import '../Validation/password_validate.dart';import '../../../features/auth/view_model/PasswordVisibility/password_visibility_cubit.dart';import '../../../features/auth/view/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class CustomPasswordTextFromField extends StatelessWidget {  final TextEditingController controller;  final String fieldId; // Add a unique ID for each field  final bool isLogin;  final String? hintText;  const CustomPasswordTextFromField({    super.key,    required this.controller,    required this.fieldId,    this.isLogin = true,    this.hintText,  });  @override  Widget build(BuildContext context) {    return BlocBuilder<PasswordVisibilityCubit, Map<String, bool>>(      builder: (context, state) {        final isVisible = state[fieldId] ??            false; // Get visibility state for the specific fieldId        return CustomTextFormField(          suffixIcon: IconButton(            icon: Icon(              isVisible                  ? AppIcons.passwordVisibility                  : AppIcons.passwordVisibilityOff,            ),            onPressed: () {              context                  .read<PasswordVisibilityCubit>()                  .togglePasswordVisibility(fieldId);            },          ),          controller: controller,          hint: hintText ?? AppString.passwordHint,          isPassword: !isVisible,          validator: (p0) => validatePassword(isLogin, password: p0),        );      },    );  }}