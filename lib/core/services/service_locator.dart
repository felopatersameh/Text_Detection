import 'package:get_it/get_it.dart';import 'package:hive_flutter/hive_flutter.dart';import '../Models/hive_app_model.dart';final GetIt getIt = GetIt.instance;Future<void> setupLocator() async {  await Hive.initFlutter();  Hive.registerAdapter(HiveAppModelAdapter());  var box = await Hive.openBox<HiveAppModel>('appBox');  if (box.isEmpty) {    HiveAppModel defaultModel = HiveAppModel(      token: '',      id: '',      refreshToken: '',      onboarding: true,    );    await box.put('appModel', defaultModel);    getIt.registerLazySingleton<HiveAppModel>(() => defaultModel);  } else {    HiveAppModel existingModel = box.get('appModel')!;    getIt.registerLazySingleton<HiveAppModel>(() => existingModel);  }}